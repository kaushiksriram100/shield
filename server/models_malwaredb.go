package main

import (
	"encoding/json"
	"log"
	"os"
	"time"

	clientv3 "go.etcd.io/etcd/client/v3"
)

type MalwareDB map[string]interface{}

func LoadMalwareDataInMemory(filename string) MalwareDB {
	//Open the file & unmarshal the data to MalwareDB

	file, err := os.Open(filename)
	if err != nil {
		log.Fatalf("Error %s", err.Error())
	}
	defer file.Close()

	malwareDB := make(MalwareDB)
	json.NewDecoder(file).Decode(&malwareDB)
	return malwareDB
}

func ConnectToEtcd() *clientv3.Client {
	cli, err := clientv3.New(clientv3.Config{
		Endpoints:   []string{"shield-etcd.default.svc.cluster.local:2379", "shield-etcd:2379", "0.0.0.0:2379"},
		DialTimeout: 5 * time.Second,
	})

	if err != nil {
		log.Fatal(err)
	}
	log.Println("Info: Connection to ETCD Succeeded")
	return cli
}
